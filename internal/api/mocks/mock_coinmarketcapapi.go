// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Labastidaa/go-blckchn/internal/api (interfaces: CoinMarketCapAPI)
//
// Generated by this command:
//
//	mockgen -destination=internal/api/mocks/mock_coinmarketcapapi.go -package=mocks github.com/Labastidaa/go-blckchn/internal/api CoinMarketCapAPI
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/Labastidaa/go-blckchn/internal/models"
	gomock "go.uber.org/mock/gomock"
)

// MockCoinMarketCapAPI is a mock of CoinMarketCapAPI interface.
type MockCoinMarketCapAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCoinMarketCapAPIMockRecorder
}

// MockCoinMarketCapAPIMockRecorder is the mock recorder for MockCoinMarketCapAPI.
type MockCoinMarketCapAPIMockRecorder struct {
	mock *MockCoinMarketCapAPI
}

// NewMockCoinMarketCapAPI creates a new mock instance.
func NewMockCoinMarketCapAPI(ctrl *gomock.Controller) *MockCoinMarketCapAPI {
	mock := &MockCoinMarketCapAPI{ctrl: ctrl}
	mock.recorder = &MockCoinMarketCapAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCoinMarketCapAPI) EXPECT() *MockCoinMarketCapAPIMockRecorder {
	return m.recorder
}

// FetchCryptoListings mocks base method.
func (m *MockCoinMarketCapAPI) FetchCryptoListings() (*models.APIResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchCryptoListings")
	ret0, _ := ret[0].(*models.APIResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchCryptoListings indicates an expected call of FetchCryptoListings.
func (mr *MockCoinMarketCapAPIMockRecorder) FetchCryptoListings() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchCryptoListings", reflect.TypeOf((*MockCoinMarketCapAPI)(nil).FetchCryptoListings))
}
